{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "AWS CodeDeploy infra",
  "Parameters": {
    "VPCID": {
      "Description": "VPC ID, e.g. 'vpc-16438e72'",
      "Type": "String"
    },
    "myIP": {
      "Description": "Enter your IP address in CIDR notation, e.g. 100.150.200.225/32",
      "Type": "String"
    },
    "InstanceProfile": {
      "Description": "Use the full ARN for SimpleCodeDeployInstanceProfile or AdvancedCodeDeployInstanceProfile",
      "Type": "String"
    },
    "KeyName": {
      "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instances",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription": "The name of an existing EC2 KeyPair."
    },
    "AZ": {
      "Description": "Comma delimited list of AvailabilityZones where the instances will be created",
      "Type": "CommaDelimitedList"
    },
    "PublicSubnets": {
      "Description": "Comma delimited list of public subnets",
      "Type": "CommaDelimitedList"
    },
    "InstanceType": {
      "Description": "Provide InstanceType to be used",
      "Type": "String",
      "ConstraintDescription": "Must be a valid EC2 instance type, such as t2.micro",
      "Default": "t2.micro"
    },
    "LinuxAMIID": {
      "Description": "Linux AMI ID",
      "Type": "String"
    },
    "WindowsAMIID": {
      "Description": "Windows AMI ID",
      "Type": "String"
    }
  },
  "Resources": {
    "WebSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "WebSecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "FromPort": -1,
            "IpProtocol": "-1",
            "ToPort": -1
          }
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "FromPort": 80,
            "IpProtocol": "6",
            "ToPort": 80
          },
          {
            "CidrIp": {
              "Ref": "myIP"
            },
            "IpProtocol": "-1"
          }
        ],
        "VpcId": {
          "Ref": "VPCID"
        }
      }
    },
    "LinuxWebLaunchConfig": {
      "Properties": {
        "AssociatePublicIpAddress": "true",
        "ImageId": {
          "Ref": "LinuxAMIID"
        },
        "InstanceType": {
          "Ref": "InstanceType"
        },
        "KeyName": {
          "Ref": "KeyName"
        },
        "SecurityGroups": [
          {
            "Ref": "WebSecurityGroup"
          }
        ],
        "IamInstanceProfile": {
          "Ref": "InstanceProfile"
        },
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash\n\n",
                "yum update -y\n\n",
                "yum install httpd -y\n\n",
                "yum install ruby\n\n",
                "yum install aws-cli\n\n",
                "cd ~\n\n",
                "aws s3 cp s3://aws-codedeploy-us-east-1/latest/install . --region us-east-1\n\n",
                "chmod +x ./install\n\n",
                "./install auto\n\n",
                "echo 'hello world' > /var/www/html/index.html\n\n",
                "hostname >> /var/www/html/index.html\n\n",
                "chkconfig httpd on\n\n",
                "service httpd start\n\n"
              ]
            ]
          }
        }
      },
      "Type": "AWS::AutoScaling::LaunchConfiguration"
    }
  },
  "Outputs": {
    "LinuxWebFQDN": {
      "Value": {
        "Fn::GetAtt": [
          "LinuxWebELB",
          "DNSName"
        ]
      }
    },
    "WindowsWebFQDN": {
      "Value": {
        "Fn::GetAtt": [
          "WindowsWebELB",
          "DNSName"
        ]
      }
    }
  }
}
